{
   "AWSTemplateFormatVersion": "2010-09-09",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "General Settings"
                    },
                    "Parameters": [
                        "StackSuffix"
                    ]
                },
                {
                    "Label": {
                        "default": "S3 Data & Artifact Repositories"
                    },
                    "Parameters": [
                        "LambdaCodeS3Bucket",
                        "DataLakeS3BucketName",
                        "SageMakerInputS3BucketName",
                        "SageMakerModelS3BucketName"
                    ]
                },
                {
                    "Label": {
                        "default": "Lambda Code for Data Pipeline"
                    },
                    "Parameters": [
                        "IngestLambdaCodeLocation",
                        "ModelLambdaCodeLocation",
                        "EnhanceLambdaCodeLocation",
                        "TransformLambdaCodeLocation"
                    ]
                },
                {
                    "Label": {
                        "default": "Lambda Code for SageMaker Automation"
                    },
                    "Parameters": [
                        "SageMakerDataPrepLambdaCodeLocation",
                        "SageMakerTrainingKickoffLambdaCodeLocation",
                        "SageMakerEndpointUpdateLambdaCodeLocation"
                    ]
                },
                {
                    "Label": {
                        "default": "Delivery APIs"
                    },
                    "Parameters": [
                        "DeliverApiLambdaCodeLocation",
                        "PredictApiLambdaCodeLocation",
                        "InitialEndpointInstanceCount",
                        "EndpointInstanceType"
                    ]
                },
                {
                    "Label": {
                        "default": "SageMaker Configuration"
                    },
                    "Parameters": [
                        "SageMakerAlgorithm",
                        "SageMakerHyperParameters",
                        "SageMakerEndpointName",
                        "SageMakerInputDataPrefix",
                        "SageMakerOutputDataPrefix",
                        "TrainingInstanceType",
                        "TrainingInstanceCount",
                        "TrainingInstanceVolumeSize",
                        "TrainingMaxRuntimeSeconds"
                    ]
                }
            ],
            "ParameterLabels": {
                "StackSuffix": {
                    "default": "Resource Suffix"
                },             
                "LambdaCodeS3Bucket": {
                    "default": "Lambda Code S3 Bucket"
                },
                "DataLakeS3BucketName": {
                    "default": "Lambda Code S3 Bucket"
                },
                "SageMakerInputS3BucketName": {
                    "default": "SageMaker Feature Staging Bucket"
                },
                "SageMakerModelS3BucketName": {
                    "default": "SageMaker Model Repository Bucket"
                },
                "SageMakerEndpointName": {
                    "default": "SageMaker Endpoint Name"
                },
                "SageMakerHyperParameters": {
                    "default": "SageMaker Hyper Parameters"
                },
                "SageMakerInputDataPrefix": {
                    "default": "SageMaker Training Data Bucket"
                },
                "SageMakerOutputDataPrefix": {
                    "default": "SageMaker Model S3 Key Prefix"
                },
                "TrainingInstanceCount": {
                    "default": "SageMaker Training Instance Count"
                },
                "TrainingInstanceType": {
                    "default": "SageMaker Training Instance Type"
                },
                "TrainingInstanceVolumeSize": {
                    "default": "SageMaker Training Instance Volume Size (GB)"
                },
                "TrainingMaxRuntimeSeconds": {
                    "default": "SageMaker Training Timeout (seconds)"
                },
                "InitialEndpointInstanceCount": {
                    "default": "SageMaker Endpoint Instance Count"
                },
                "EndpointInstanceType": {
                    "default": "SageMaker Endpoint Instance Type"
                },
                "QSS3BucketName": {
                    "default": "Quick Start S3 Bucket Name"
                },
                "QSS3KeyPrefix": {
                    "default": "Quick Start S3 Key Prefix"
                }
            }
        }
    },
   "Parameters": {
        "StackSuffix": {
            "AllowedPattern": "^[0-9a-z-]+$",
            "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, and hyphens (-).",
            "Type": "String",
            "Description": "The suffix appended to all resources in the stack.  This will allow multiple copies of the same stack to be created in the same account."
        },
        "QSS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Default": "aws-quickstart",
            "Description": "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String"
        },
        "QSS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-/]*$",
            "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Default": "quickstart-SageMaker-pariveda/",
            "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Type": "String"
        },
        "LambdaCodeS3Bucket": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Lambda Code bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String",
            "Description": "S3 Bucket where lambda code will be copied to (within your account)"
        },
        "DataLakeS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Data Lake bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String",
            "Description": "S3 Bucket that will serve as the data lake"
        },
        "SageMakerEndpointName": {
            "Type": "String",
            "Description": "Name of the SageMaker endpoint that will be executed to generate predictions",
            "Default": "spot-price-predictions"
        },
        "SageMakerHyperParameters": {
            "Type": "String",
            "Description": "The hyperparameters that will be passed to the SageMaker training algorithm, in JSON format.  See the HyperParameters section under the algorithm you are using from https://docs.aws.amazon.com/SageMaker/latest/dg/algos.html",
            "Default": "{\"time_freq\":\"H\",\"context_length\":72,\"prediction_length\":24}"
        },
        "SageMakerInputS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "SageMaker Input bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String",
            "Description": "S3 Bucket where SageMaker input data is created by the data prep lamba function "
        },
        "SageMakerModelS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "SageMaker Model bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String",
            "Description": "S3 Bucket where SageMaker models are saved after training"
        },
        "SageMakerInputDataPrefix": {
            "Type": "String",
            "Description": "S3 Key Prefix (within the SageMakerInputS3Bucket) where SageMaker training/testing data is created by the data prep lambda function .  SageMaker will point to this location to find the training and test data channels.",
            "Default": "features"
        },
        "SageMakerOutputDataPrefix": {
            "Type": "String",
            "Description": "S3 Key Prefix (within the SageMakerModelS3Bucket) where SageMaker model is saved after training.",
            "Default": "models"
        },
        "TrainingInstanceCount": {
            "AllowedPattern": "^[0-9]+$",
            "ConstraintDescription": "The Training Instance Count  must be a number",
            "Type": "String",
            "Description": "The number of instances to train the SageMaker model with.  Ensure that the algorithm you have chosen supports parallel training before setting to a number higher than 1.",
            "Default": "1"
        },
        "TrainingInstanceType": {
            "Type": "String",
            "AllowedValues": ["ml.t2.medium","ml.t2.large","ml.t2.xlarge","ml.t2.2xlarge","ml.m5.large","ml.m5.xlarge","ml.m5.2xlarge","ml.m5.4xlarge","ml.m5.12xlarge","ml.m5.24xlarge","ml.m4.xlarge","ml.m4.4xlarge","ml.m4.10xlarge","ml.m4.16xlarge","ml.c5.large","ml.c5.xlarge","ml.c5.2xlarge","ml.c5.4xlarge","ml.c5.9xlarge","ml.c5.18xlarge","ml.c4.large","ml.c4.xlarge","ml.c4.2xlarge","ml.c4.4xlarge","ml.c4.8xlarge","ml.p3.2xlarge","ml.p3.8xlarge","ml.p3.16xlarge","ml.p2.xlarge","ml.p2.8xlarge","ml.p2.16xlarge"],
            "Description": "The instance type to train the SageMaker model with.  Check the documentation for your chosen algorithm for instance type recommendations.",
            "Default": "ml.t2.medium"
        },
        "TrainingInstanceVolumeSize": {
            "AllowedPattern": "^[0-9]+$",
            "ConstraintDescription": "The Training Instance Volume Size must be a number",
            "Type": "String",
            "Description": "The EBS volume size (in GB) to attach to each instance training the SageMaker model",
            "Default": "20"
        },
        "TrainingMaxRuntimeSeconds": {
            "AllowedPattern": "^[0-9]+$",
            "ConstraintDescription": "The Training Max Runtime must be a number",
            "Type": "String",
            "Description": "The maximum number of seconds to allow a SageMaker training job to execute",
            "Default": "3600"
        },
        "InitialEndpointInstanceCount": {
            "AllowedPattern": "^[0-9]+$",
            "ConstraintDescription": "The Endpoint Instance Count  must be a number",
            "Type": "String",
            "Description": "The number of instances the SageMaker endpoint autoscaling group begins with.",
            "Default": "1"
        },
        "EndpointInstanceType": {
            "Type": "String",
            "AllowedValues": ["ml.t2.medium","ml.t2.large","ml.t2.xlarge","ml.t2.2xlarge","ml.m5.large","ml.m5.xlarge","ml.m5.2xlarge","ml.m5.4xlarge","ml.m5.12xlarge","ml.m5.24xlarge","ml.m4.xlarge","ml.m4.4xlarge","ml.m4.10xlarge","ml.m4.16xlarge","ml.c5.large","ml.c5.xlarge","ml.c5.2xlarge","ml.c5.4xlarge","ml.c5.9xlarge","ml.c5.18xlarge","ml.c4.large","ml.c4.xlarge","ml.c4.2xlarge","ml.c4.4xlarge","ml.c4.8xlarge","ml.p3.2xlarge","ml.p3.8xlarge","ml.p3.16xlarge","ml.p2.xlarge","ml.p2.8xlarge","ml.p2.16xlarge"],
            "Description": "The instance type to run the SageMaker endpoint on.  Check the documentation for your chosen algorithm for instance type recommendations.",
            "Default": "ml.t2.medium"
        }
    },
    "Mappings": {
        "LambdaCode": {
        "IngestLambdaCodeLocation": { "path": "ingest-lambda/ingest-lambda.zip" },
        "ModelLambdaCodeLocation": { "path": "model-lambda/model-lambda.zip" },
        "EnhanceLambdaCodeLocation": { "path": "enhance-lambda/enhance-lambda.zip" },
        "TransformLambdaCodeLocation": { "path": "transform-lambda/transform-lambda.zip" },
        "DeliverApiLambdaCodeLocation": { "path": "deliver-api-lambda/deliver-api-lambda.zip" },
        "PredictApiLambdaCodeLocation": { "path": "predict-api-lambda/predict-api-lambda.zip" },
        "SageMakerDataPrepLambdaCodeLocation": { "path": "sagemaker-dataprep-lambda/sagemaker-dataprep-lambda.zip" },
        "SageMakerTrainingKickoffLambdaCodeLocation": { "path": "sagemaker-training-kickoff-lambda/sagemaker-training-kickoff-lambda.zip" },
        "SageMakerEndpointUpdateLambdaCodeLocation" : { "path": "sagemaker-endpoint-update-lambda/sagemaker-endpoint-update-lambda.zip" }    
        }
    },
    "Conditions": {
        "QSS3KeyPrefixEmpty": {
            "Fn::Equals": [
                {
                    "Ref": "QSS3KeyPrefix"
                },
                ""
            ]
        }
    },
   "Resources": {
        "LambdaCopyStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {"Fn::Join": ["/", { "Fn::If": [ "QSS3KeyPrefixEmpty", 
                    ["https://s3.amazonaws.com", { "Ref" : "QSS3BucketName" }, "lambdacode.template"],
                    ["https://s3.amazonaws.com", { "Ref" : "QSS3BucketName" }, {"Ref": "QSS3KeyPrefix"}, "lambdacode.template"]]}]},
                "TimeoutInMinutes": "60",
                "Parameters": {
                    "StackSuffix" : { "Ref" : "StackSuffix" },
                    "LambdaCodeS3Bucket" : { "Ref" : "LambdaCodeS3Bucket" },
                    "QSS3BucketName" : { "Ref" : "QSS3BucketName" },
                    "QSS3KeyPrefix" : { "Ref" : "QSS3KeyPrefix" },
                    "IngestLambdaCodeLocation" : { "Fn::FindInMap" : ["LambdaCode", "IngestLambdaCodeLocation", "path"] },
                    "ModelLambdaCodeLocation" : { "Fn::FindInMap" : ["LambdaCode", "ModelLambdaCodeLocation", "path"] },
                    "EnhanceLambdaCodeLocation" : { "Fn::FindInMap" : ["LambdaCode", "EnhanceLambdaCodeLocation", "path"] },
                    "TransformLambdaCodeLocation" : { "Fn::FindInMap" : ["LambdaCode", "TransformLambdaCodeLocation", "path"] },
                    "DeliverApiLambdaCodeLocation" : { "Fn::FindInMap" : ["LambdaCode", "DeliverApiLambdaCodeLocation", "path"] },
                    "PredictApiLambdaCodeLocation" : { "Fn::FindInMap" : ["LambdaCode", "PredictApiLambdaCodeLocation", "path"] },
                    "SageMakerDataPrepLambdaCodeLocation" : { "Fn::FindInMap" : ["LambdaCode", "SageMakerDataPrepLambdaCodeLocation", "path"] },
                    "SageMakerTrainingKickoffLambdaCodeLocation" : { "Fn::FindInMap" : ["LambdaCode", "SageMakerTrainingKickoffLambdaCodeLocation", "path"] },
                    "SageMakerEndpointUpdateLambdaCodeLocation" : { "Fn::FindInMap" : ["LambdaCode", "SageMakerEndpointUpdateLambdaCodeLocation", "path"] }
                }
            }
        },
        "IMETStack": {
            "DependsOn": ["LambdaCopyStack"],
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {"Fn::Join": ["/", { "Fn::If": [ "QSS3KeyPrefixEmpty", 
                    ["https://s3.amazonaws.com", { "Ref" : "QSS3BucketName" }, "imet.template"],
                    ["https://s3.amazonaws.com", { "Ref" : "QSS3BucketName" }, {"Ref": "QSS3KeyPrefix"}, "imet.template"]]}]},
                "TimeoutInMinutes": "60",
                "Parameters": {
                    "StackSuffix" : { "Ref" : "StackSuffix" },
                    "LambdaCodeS3Bucket" : { "Fn::GetAtt" : [ "LambdaCopyStack", "Outputs.OutputBucketName" ] },
                    "LambdaCodeS3KeyPrefix" :{ "Ref" : "QSS3KeyPrefix" },
                    "DataLakeS3BucketName" : { "Ref" : "DataLakeS3BucketName" },
                    "IngestLambdaCodeLocation" : { "Fn::FindInMap" : ["LambdaCode", "IngestLambdaCodeLocation", "path"] },
                    "ModelLambdaCodeLocation" : { "Fn::FindInMap" : ["LambdaCode", "ModelLambdaCodeLocation", "path"] },
                    "EnhanceLambdaCodeLocation" : { "Fn::FindInMap" : ["LambdaCode", "EnhanceLambdaCodeLocation", "path"] },
                    "TransformLambdaCodeLocation" : { "Fn::FindInMap" : ["LambdaCode", "TransformLambdaCodeLocation", "path"] }
                }
            }
        },
        "SageMakerStack": {
            "DependsOn": ["LambdaCopyStack"],
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {"Fn::Join": ["/", { "Fn::If": [ "QSS3KeyPrefixEmpty", 
                    ["https://s3.amazonaws.com", { "Ref" : "QSS3BucketName" }, "sagemaker.template"],
                    ["https://s3.amazonaws.com", { "Ref" : "QSS3BucketName" }, {"Ref": "QSS3KeyPrefix"}, "sagemaker.template"]]}]},
                "TimeoutInMinutes": "60",
                "Parameters": {
                    "StackSuffix" : { "Ref" : "StackSuffix"},
                    "LambdaCodeS3Bucket" : { "Fn::GetAtt" : [ "LambdaCopyStack", "Outputs.OutputBucketName" ] },
                    "LambdaCodeS3KeyPrefix" :{ "Ref" : "QSS3KeyPrefix" },
                    "SageMakerDataPrepLambdaCodeLocation" : { "Fn::FindInMap" : ["LambdaCode", "SageMakerDataPrepLambdaCodeLocation", "path"] },
                    "SageMakerTrainingKickoffLambdaCodeLocation" : { "Fn::FindInMap" : ["LambdaCode", "SageMakerTrainingKickoffLambdaCodeLocation", "path"] },
                    "SageMakerEndpointUpdateLambdaCodeLocation" : { "Fn::FindInMap" : ["LambdaCode", "SageMakerEndpointUpdateLambdaCodeLocation", "path"] },
                    "DataLakeS3BucketName" : { "Ref" : "DataLakeS3BucketName" },
                    "SageMakerInputS3BucketName" : { "Ref" : "SageMakerInputS3BucketName" },
                    "SageMakerModelS3BucketName" : { "Ref" : "SageMakerModelS3BucketName" },
                    "SageMakerAlgorithm" : "DeepARForecasting",
                    "SageMakerEndpointName" : {"Ref": "SageMakerEndpointName" },
                    "HyperParameters" : { "Ref" : "SageMakerHyperParameters" },
                    "TrainingInstanceCount" : { "Ref" : "TrainingInstanceCount" },
                    "TrainingInstanceVolumeSize" : { "Ref" : "TrainingInstanceVolumeSize" },
                    "TrainingInstanceType" : { "Ref" : "TrainingInstanceType" },
                    "TrainingMaxRuntimeSeconds" : { "Ref" : "TrainingMaxRuntimeSeconds" },
                    "InitialEndpointInstanceCount" : { "Ref" : "InitialEndpointInstanceCount" },
                    "EndpointInstanceType" : { "Ref" : "EndpointInstanceType" },
                    "SageMakerInputDataPrefix" : { "Ref" : "SageMakerInputDataPrefix" },
                    "SageMakerOutputDataPrefix" : { "Ref" : "SageMakerOutputDataPrefix" },
                    "DataLakeS3BucketARN" : { "Fn::GetAtt" : [ "IMETStack", "Outputs.DataLakeS3BucketARN" ] }
                }
            }
        },
        "DeliverStack": {
            "DependsOn": ["LambdaCopyStack"],
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {"Fn::Join": ["/", { "Fn::If": [ "QSS3KeyPrefixEmpty", 
                    ["https://s3.amazonaws.com", { "Ref" : "QSS3BucketName" }, "deliver.template"],
                    ["https://s3.amazonaws.com", { "Ref" : "QSS3BucketName" }, {"Ref": "QSS3KeyPrefix"}, "deliver.template"]]}]},
                "TimeoutInMinutes": "60",
                "Parameters": {
                    "StackSuffix" : { "Ref" : "StackSuffix" },
                    "SageMakerEndpointName" : {"Ref": "SageMakerEndpointName" },
                    "LambdaCodeS3Bucket" : { "Fn::GetAtt" : [ "LambdaCopyStack", "Outputs.OutputBucketName" ] },
                    "LambdaCodeS3KeyPrefix" :{ "Ref" : "QSS3KeyPrefix" },
                    "DeliverApiLambdaCodeLocation" : { "Fn::FindInMap" : ["LambdaCode", "DeliverApiLambdaCodeLocation", "path"] },
                    "PredictApiLambdaCodeLocation" : { "Fn::FindInMap" : ["LambdaCode", "PredictApiLambdaCodeLocation", "path"] },
                    "DataLakeS3BucketName" : { "Ref" : "DataLakeS3BucketName" },
                    "DataLakeS3BucketARN" : { "Fn::GetAtt" : [ "IMETStack", "Outputs.DataLakeS3BucketARN" ] }
                }
            }
        }
    }   
}